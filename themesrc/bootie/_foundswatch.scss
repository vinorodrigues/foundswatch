// ----------------------------------------------------------------------------
// Foundswatch v1.0.0 - Bootie
// @see https://foundswatch.com
// (c) 2020 Vino Rodrigues
// Licensed under MIT
// Based on ZURB Foundation for Sites, https://get.foundation
// Based on Bootstrap 4
// ----------------------------------------------------------------------------

$form-feedback-icon-invalid-color: get-color(alert);
$form-feedback-icon-invalid: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='#{$form-feedback-icon-invalid-color}' viewBox='0 0 12 12'><circle cx='6' cy='6' r='4.5'/><path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/><circle cx='6' cy='8.2' r='.6' fill='#{$form-feedback-icon-invalid-color}' stroke='none'/></svg>") !default;

// Replace `$search` with `$replace` in `$string`
// Used on our SVG icon backgrounds for custom forms.
//
// @author Hugo Giraudel
// @param {String} $string - Initial string
// @param {String} $search - Substring to replace
// @param {String} $replace ('') - New value
// @return {String} - Updated string
@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

$escaped-characters: (
  ("<","%3c"),
  (">","%3e"),
  ("#","%23"),
  ("(","%28"),
  (")","%29"),
) !default;

// See https://codepen.io/kevinweber/pen/dXWoRw
@function escape-svg($string) {
  @if str-index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if str-index($string, "url(") == 1 {
        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

// :root vars like bootstrap
:root {
	// Custom variable values only support SassScript inside `#{}`.
	@each $color, $value in $foundation-palette {
		--#{$color}: #{$value};
	}

	--light-gray: #{$light-gray};
	--medium-gray: #{$medium-gray};
	--dark-gray: #{$dark-gray};
	--black: #{$black};
	--white: #{$white};

	@each $bp, $value in $breakpoints {
		--breakpoint-#{$bp}: #{$value};
	}

	--top-bar-bg: #{$topbar-background};
	--title-bar-bg: #{$titlebar-background};

	// Use `inspect` for lists so that quoted items keep the quotes.
	// See https://github.com/sass/sass/issues/2383#issuecomment-336349172
	--font-family-sans-serif: #{inspect($body-font-family)};
	--font-family-monospace: #{inspect($font-family-monospace)};
}

@each $color, $value in $foundation-palette {
	.text-#{$color} {
		color: #{$value};
	}
}
.text-muted {
	color: scale-color($body-font-color, $lightness: 50%);
}

// 6. Abide
// --------

.is-invalid-input {
	&:not(:focus) {
		background-color: inherit;
	}

	border-color: get-color(alert);
	background-image: escape-svg($form-feedback-icon-invalid);
	background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 1rem 1rem;

    &:focus,
    &:active {
    	border-color: get-color(alert);
		box-shadow: 0 0 0 0.2rem rgba(get-color(alert), 0.25);
	}
}

// 7. Accordion
// ------------

.accordion {
	.is-active {
		.accordion-title {
			background-color: $light-gray;
			color: $body-font-color;
		}
	}
}

// 8. Accordion Menu
// -----------------

.accordion-menu {
	.is-accordion-submenu-parent {
		&.is-active > a::after {
			border-top-color: $white;
		}
		&[aria-expanded='true'].is-active > a {
			background-color: $accordion-item-background-hover;
			color: $accordion-item-color;

			&::after {
				border-top-color: $accordion-item-color;
			}
		}
	}
}

// 9. Badge
// --------

.badge {
	font-weight: bold;
}

// 10. Breadcrumbs
// ---------------

.breadcrumbs {
	padding: rem-calc(12 16);
	background-color: $light-gray;
	border-radius: $global-radius;

	li {
		text-transform: inherit;
		font-size: 1rem;
	}
}

// 12. Button Group
// ----------------

.button-group.no-gaps {
	.button {
		border-radius: 0;

		&:first-child {
			border-top-left-radius: $global-radius;
			border-bottom-left-radius: $global-radius;
		}
		&:last-child {
			border-top-right-radius: $global-radius;
			border-bottom-right-radius: $global-radius;
		}
	}
}

.button-group .button {
	&:focus,
	&:active {
		z-index: 1;
	}
}

// 13. Callout
// -----------

$theme-color-interval: 8% !default;

// Borrowed from Bootstrap (alert-variant), (c) The Bootstrap Authors
@mixin callout-variant($background, $border, $color) {
	color: $color;
	background-color: $background;
	border-color: $border;
	hr {
		border-top-color: darken($border, 5%);
	}
	a:not(.button) {
		color: darken($color, 10%);
	}
	a:hover:not(.button) {
		text-decoration: underline;
	}
}

// Borrowed from Bootstrap (theme-color-level), (c) The Bootstrap Authors
@function the-color-level($color, $level: 0) {
	$color-base: if($level > 0, #000, #fff);
	$level: abs($level);
	@return mix($color-base, $color, $level * $theme-color-interval);
}

.callout {
	a:not(.button) {
		color: darken($black, 10%);
		font-weight: $global-weight-bold;
	}
	a:hover:not(.button) {
		text-decoration: underline;
	}
	.close-button {
		color: inherit;
	}
	@each $color, $value in $foundation-palette {
		&.#{$color} {
			@include callout-variant(the-color-level($value, -10), the-color-level($value, -9), the-color-level($value, 6));
		}
	}
}

// 16. Drilldown
// -------------

.drilldown {
	.is-drilldown-submenu-parent.is-active > a::after {
		border-left-color: $white;
	}
}

// 23. Menu
// --------

.menu .is-active > a {
	border-radius: $global-radius;
}

// ***TODO*** menu with dropdown `.is-active`

// 51. Tabs
// --------

.tabs {
	border: none;
	border-bottom: 1px solid $tab-content-border;

	li {
		border: 1px solid transparent;
		margin-bottom: -1px;

		border-top-left-radius: $global-radius;
		border-top-right-radius: $global-radius;

		&:hover {
			border: 1px solid $tab-content-border;
		}

		&.is-active {
			border: 1px solid $tab-content-border;
			border-bottom-color: $body-background;
		}
	}
}

.tabs-title > a:focus,
.tabs-title > a[aria-selected="true"] {
	background-color: inherit;
	color: inherit;
}

.tabs-content {
	border: none;
}

// 27. Pagination
// --------------

.pagination {
	display: flex;
	border-radius: $global-radius;

	li {
		border-radius: 0;
		border: 1px solid mix($light-gray, $medium-gray);

		&:first-child {
			border-top-left-radius: $global-radius;
			border-bottom-left-radius: $global-radius;
		}
		&:last-child {
			border-top-right-radius: $global-radius;
			border-bottom-right-radius: $global-radius;
		}

		&.current {
			border-color: scale-color($pagination-item-background-current, $lightness: $button-background-hover-lightness);
		}

		&.ellipsis {
			padding: $pagination-item-padding;
		}
	}
}

// 49. Switch
// ----------

.switch {
	.switch-inactive,
	.switch-active {
		font-size: 75%;
	}

	&.tiny .switch-paddle { border-radius: $switch-height-tiny / 2;	}
	&.small .switch-paddle { border-radius: $switch-height-small / 2; }
	&.large .switch-paddle { border-radius: $switch-height-large / 2; }
}

// 55. Top bar
// -----------

$topbar-text-color: $white;
$topbar-link-color: rgba($white, 0.5);
$topbar-link-active-color: $white;

.top-bar {
	.dropdown.menu {
		> li > a {
			color: $topbar-link-color;

			&:hover, &:active {
				color: $topbar-link-active-color;
			}

		}

		> li.is-dropdown-submenu-parent > a::after {
			@include css-triangle($dropdownmenu-arrow-size, $topbar-link-color, down);
			#{$global-right}: 5px;
			#{$global-left}: auto;
			margin-top: -1 * ($dropdownmenu-arrow-size / 2);
		}


		> li.menu-text {
			&,
			& > a {
				color: $topbar-text-color;
			}
		}

		> li.is-active > a {
			color: $topbar-link-active-color;
		}

		.is-dropdown-submenu {
			> li > a {
				color: $topbar-link-color;

				&:hover, &:active {
					color: $topbar-link-active-color;
				}
			}
		}
	}
}
